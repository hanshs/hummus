// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    // output   = "../../../node_modules/.prisma/client"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    // relationMode = "prisma"
}

// auth models
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// hummus models
model Feature {
    id          String     @id @default(cuid())
    title       String
    description String
    scenarios   Scenario[]
}

model Scenario {
    id        String         @id @default(cuid())
    feature   Feature?       @relation(fields: [featureId], references: [id])
    featureId String?
    steps     ScenarioStep[]
}

model ScenarioStep {
    id         String    @id @default(cuid())
    scenario   Scenario? @relation(fields: [scenarioId], references: [id])
    scenarioId String?
}
