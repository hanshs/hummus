// https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    // previewFeatures = ["jsonProtocol"]
    // output   = "../../../node_modules/.prisma/client"
}

generator erd1 {
    provider  = "prisma-erd-generator"
    tableOnly = true
    output    = "ERD1.svg"
}

generator erd2 {
    provider = "prisma-erd-generator"
    output   = "ERD2.svg"
}

datasource db {
    provider = "mysql"
    // provider = "postgres"

    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id          String    @id @default(cuid())
    username    String    @unique
    password    String
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    accessToken String    @unique @default(uuid())
    projects    Project[]
}

model Project {
    id         String      @id @default(uuid())
    name       String
    users      User[]
    features   Feature[]
    behaviours Behaviour[]
    params     Param[]
}

model Feature {
    id          String     @id @default(uuid())
    title       String?
    description String?
    scenarios   Scenario[]
    params      Param[]
    project     Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId   String

    @@index([projectId])
}

model Scenario {
    id        Int     @id @default(autoincrement())
    name      String?
    steps     Step[]  @relation("ScenarioSteps")
    feature   Feature @relation(fields: [featureId], references: [id])
    featureId String

    @@index([featureId])
}

model Step {
    id                Int        @id @default(autoincrement())
    order             Int
    params            Param[]
    behaviour         Behaviour  @relation("StepBehaviour", fields: [behaviourId], references: [id])
    scenario          Scenario?  @relation("ScenarioSteps", fields: [scenarioId], references: [id])
    parentBehaviour   Behaviour? @relation("BehaviourSubSteps", fields: [parentBehaviourId], references: [id])
    behaviourId       String
    scenarioId        Int?
    parentBehaviourId String?

    @@index([scenarioId])
    @@index([behaviourId])
    @@index([parentBehaviourId])
}

model Behaviour {
    id        String   @id @default(uuid())
    value     String   @unique
    project   Project? @relation(fields: [projectId], references: [id])
    steps     Step[]   @relation("StepBehaviour")
    subSteps  Step[]   @relation("BehaviourSubSteps")
    projectId String?

    @@index([projectId])
}

model Param {
    id        Int      @id @default(autoincrement())
    name      String
    value     String
    type      String
    steps     Step[]
    feature   Feature? @relation(fields: [featureId], references: [id])
    featureId String?
    project   Project  @relation(fields: [projectId], references: [id])
    projectId String

    @@index([featureId, projectId])
    @@index([projectId])
}
